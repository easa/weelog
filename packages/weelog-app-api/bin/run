#!/usr/bin/env node

const http = require('http')
const axios = require('axios')
const { serviceRegistryURL, log } = require('../config')[process.env.NODE_ENV || 'development']
//const logger = log()
const service = require('../server')//(config)
const server = http.createServer(service)

server.listen(80)


server.on('listening', () => {
  //TODO: service worker
  process.on('uncaughtException', async () => {
    await exitPlan('uncaughtException')
  })
  process.on('SIGINT', async () => {
    await exitPlan('SIGINT')
  })
  process.on('SIGTERM', async () => {
    await exitPlan('SIGTERM')
  })

  // logger.info(`\nService is listening on port ${server.address().port} in ${server.get('env')} mode`)
console.log('hi to app')
  async function exitPlan() {
    console.trace(`quited - ${arguments ? Object.keys(arguments).map(i => arguments[i]) : 'on exception'}`)
    process.removeAllListeners()
    process.exit(1)
  }
})
server.on('connection', (socket) => {
  logger.info(`Connection from ${socket.address().toString()}`)
})